datatype: team
identifier: test_team
punctuation: ;
datatype: member
identifier: test_member
punctuation: ;
comment: $ Custom function $
datatype: team
identifier: custom_team_create
brackets: (
datatype: string
identifier: name
punctuation: ,
datatype: string
identifier: description
punctuation: ,
datatype: string
identifier: url
punctuation: ,
datatype: string
identifier: email
brackets: )
brackets: {
comment: $ Custom function for team cration $
comment: $ defualt fields $
datatype: team
identifier: t
punctuation: ;
identifier: t
punctuation: .
identifier: name
operator: =
identifier: name
punctuation: ;
identifier: t
punctuation: .
identifier: description
operator: =
identifier: description
punctuation: ;
identifier: t
punctuation: .
identifier: url
operator: =
identifier: url
punctuation: ;
identifier: t
punctuation: .
identifier: email
operator: =
identifier: email
punctuation: ;
identifier: t
punctuation: .
identifier: members
operator: =
identifier: NULL
punctuation: ;
identifier: t
punctuation: .
identifier: num_members
operator: =
constant: 0
punctuation: ;
reserved: return
identifier: t
punctuation: ;
brackets: }
datatype: void
identifier: func
brackets: (
brackets: )
brackets: {
comment: $ Creating and adding a member to a team$
datatype: member
identifier: a2
punctuation: ;
identifier: a2
operator: =
identifier: create_members
brackets: (
identifier: name
operator: =
constant: "John"
punctuation: ,
identifier: email
operator: =
constant: "john120@gmail.com"
punctuation: ,
identifier: contact
operator: =
constant: "9972073345"
brackets: )
punctuation: ;
identifier: test_team
punctuation: .
identifier: add
brackets: (
identifier: a2
brackets: )
punctuation: ;
comment: $ list syntax $
reserved: list
brackets: [
constant: 1
brackets: ]
brackets: [
constant: 2
brackets: ]
punctuation: :
datatype: int
identifier: id
punctuation: ;
comment: $ User defined fields $
identifier: test_member
punctuation: .
identifier: salary
operator: =
constant: 33260
punctuation: ;
datatype: int
identifier: a
operator: =
constant: 2
punctuation: ;
identifier: test_member
punctuation: .
identifier: join_date
operator: =
constant: "12/08/2021"
punctuation: ;
identifier: test_team
punctuation: .
identifier: id
operator: =
constant: 3472
punctuation: ;
brackets: }
datatype: int
identifier: main
brackets: (
brackets: )
brackets: {
comment: $ for loop $
reserved: for
brackets: (
identifier: i
operator: =
constant: 0
punctuation: ;
identifier: i
operator: <
identifier: len
brackets: (
identifier: test_team
punctuation: .
identifier: members
brackets: )
punctuation: ;
identifier: i
operator: ++
brackets: )
brackets: {
comment: $ Add len(test_team.members) as a functionality$
datatype: float
identifier: sal
operator: =
identifier: test_team
punctuation: .
identifier: members
brackets: [
identifier: i
brackets: ]
punctuation: .
identifier: salary
punctuation: ;
reserved: if
brackets: (
identifier: sal
operator: >
constant: 20000
brackets: )
brackets: {
identifier: test_team
punctuation: .
identifier: members
brackets: [
identifier: i
brackets: ]
punctuation: .
identifier: salary
operator: +=
constant: 10000
punctuation: ;
brackets: }
brackets: }
comment: $ print statement $
identifier: print
brackets: (
constant: "Looking at team now..."
brackets: )
punctuation: ;
datatype: member
identifier: member2
punctuation: ;
identifier: member2
punctuation: .
identifier: name
operator: =
constant: "Hello"
punctuation: ;
comment: $ adding to a team using "+=" operator $
identifier: test_team
operator: +=
identifier: member2
punctuation: ;
identifier: test_team2
punctuation: .
identifier: add
brackets: (
identifier: member2
brackets: )
punctuation: ;
comment: $ Creating a task$
comment: $task feilds$
datatype: task
identifier: test_task
operator: =
identifier: create_task
brackets: (
constant: "Work"
punctuation: ,
constant: "This is to test the addition of a task and assigning."
punctuation: ,
constant: "12/12/2023"
brackets: )
punctuation: ;
identifier: test_task
punctuation: .
identifier: lead
operator: =
identifier: member2
punctuation: ;
identifier: test_task
punctuation: .
identifier: status
operator: =
identifier: Doing
punctuation: ;
comment: $ Can only be three options, any other should give error.$
comment: $ assigning a task to a member $
identifier: test_task
identifier: test_member
punctuation: ;
identifier: test_member
punctuation: .
identifier: assign_task
brackets: (
identifier: test_task
brackets: )
punctuation: ;
datatype: team
identifier: team3
punctuation: ;
comment: $ combining two team$
identifier: team3
operator: =
identifier: test_team
operator: &
identifier: test_team2
punctuation: ;
comment: $ visualizations $
identifier: flow
brackets: (
identifier: test_team
brackets: )
punctuation: ;
identifier: board
brackets: (
identifier: team3
brackets: )
punctuation: ;
brackets: }
