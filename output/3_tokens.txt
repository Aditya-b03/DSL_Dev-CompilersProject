identifier: main
identifier: data
operator: =
identifier: base
punctuation: .
identifier: load
brackets: (
constant: "../Data/data.json"
brackets: )
punctuation: ;
datatype: int
identifier: main
brackets: (
brackets: )
brackets: {
datatype: member
identifier: m_a
punctuation: ,
identifier: m_b
punctuation: ,
identifier: m_c
punctuation: ;
identifier: m_a
operator: =
identifier: create_member
brackets: (
constant: "Sumedh"
brackets: )
punctuation: ;
identifier: m_b
operator: =
identifier: create_member
brackets: (
constant: "Kaustubh"
brackets: )
punctuation: ;
identifier: m_c
operator: =
identifier: create_member
brackets: (
constant: "Aman"
brackets: )
punctuation: ;
datatype: team
identifier: t
operator: =
identifier: data
punctuation: .
identifier: search
brackets: (
identifier: type
operator: =
constant: "team"
punctuation: ,
identifier: id
operator: =
constant: "4321"
brackets: )
punctuation: ;
identifier: t
punctuation: .
identifier: add_member
brackets: (
brackets: {
identifier: m_a
punctuation: ,
identifier: m_b
punctuation: ,
identifier: m_c
brackets: }
brackets: )
punctuation: ;
datatype: member
identifier: m
operator: =
identifier: data
punctuation: .
identifier: search
brackets: (
identifier: type
operator: =
identifier: of_type
brackets: (
identifier: abc
brackets: )
punctuation: ,
identifier: id
operator: =
constant: "78324"
brackets: )
punctuation: ;
reserved: if
brackets: (
identifier: t
punctuation: .
identifier: find_member
brackets: (
identifier: m
brackets: )
brackets: )
brackets: {
datatype: task
identifier: t_0
operator: =
identifier: create_task
brackets: (
constant: "Update Team Info"
punctuation: ,
constant: "01-11-23 11:59PM"
punctuation: ,
identifier: Assigned
punctuation: ,
identifier: note
operator: =
constant: "Urgent"
brackets: )
punctuation: ;
identifier: t_0
identifier: m
punctuation: ;
brackets: }
datatype: team
identifier: finances
punctuation: ,
identifier: finances_dummy
punctuation: ;
comment: $ Naive way to search $
reserved: for
brackets: (
datatype: int
identifier: i
operator: =
constant: 0
punctuation: ;
identifier: i
operator: <
identifier: len
brackets: (
identifier: t
punctuation: .
identifier: subteams
brackets: )
punctuation: ;
identifier: i
operator: ++
brackets: )
brackets: {
reserved: if
brackets: (
identifier: t
punctuation: .
identifier: subteam
brackets: [
identifier: i
brackets: ]
punctuation: .
identifier: id
operator: is
constant: "17823"
brackets: )
brackets: {
identifier: finances_dummy
operator: =
identifier: t
punctuation: .
identifier: subteam
brackets: [
identifier: i
brackets: ]
punctuation: ;
identifier: break
punctuation: ;
brackets: }
brackets: }
comment: $ Efficient Search $
identifier: finances
operator: =
identifier: t
punctuation: .
identifier: search
brackets: (
identifier: type
operator: =
identifier: of_type
brackets: (
identifier: abc
brackets: )
punctuation: ,
identifier: id
operator: =
constant: "17823"
brackets: )
punctuation: ;
datatype: meeting
identifier: finance_sync
operator: =
identifier: create_meeting
brackets: (
identifier: name
operator: =
constant: "Finance Team Updates"
punctuation: ,
identifier: date
operator: =
constant: "02-11-23"
punctuation: ,
identifier: time
operator: =
constant: "14:30"
punctuation: ,
identifier: team_
operator: =
identifier: finances
brackets: )
punctuation: ;
identifier: base
punctuation: .
identifier: save
brackets: (
identifier: data
punctuation: ,
constant: "../Data/data.json"
brackets: )
punctuation: ;
reserved: list
brackets: [
identifier: d
brackets: ]
brackets: [
constant: 1
brackets: ]
brackets: [
constant: 3
brackets: ]
brackets: [
constant: 2
brackets: ]
punctuation: :
datatype: team
identifier: t
operator: =
identifier: data
punctuation: .
identifier: search
brackets: (
identifier: type
operator: =
identifier: of_type
brackets: (
identifier: abc
brackets: )
punctuation: ,
identifier: id
operator: =
constant: "17823"
brackets: )
punctuation: ;
reserved: return
constant: 0
punctuation: ;
brackets: }
