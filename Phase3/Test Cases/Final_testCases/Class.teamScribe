
class Home{
public: 
    team family;
    team relatives;
    team friends;
    team colleagues;
    team neighbours; 
    
    void init(){
        self.family = create_team("family" , "Happy Family");
        self.relatives = create_team("relatives" , "Relatives");
        self.friends = create_team("friends" , "cool friends");
        self.colleagues = create_team("colleagues" , "lets work");
        self.neighbours = create_team("neighbours", "loser neighbours");
    }

    void init(team family, team relatives, team friends, team colleagues, team neighbours){
        self.family = family;
        self.relatives = relatives;
        self.friends = friends;
        self.colleagues = colleagues;
        self.neighbours = neighbours;
    }

    void addPerson(member p, string relation){
        if(relation is "family"){
            family.insert(p);
        }
        else if(relation is "relatives"){
            relatives.insert(p);
        }
        else if(relation is "friends"){
            friends.insert(p);
        }
        else if(relation is "colleagues"){
            colleagues.insert(p);
        }
        else if(relation is "neighbours"){
            neighbours.insert(p);
        }
        else{
            print("Invalid Relation\n");
        }
    }


    void display(){
        print("Family\n");
        family.display();
        print("Relatives\n");
        relatives.display();
        print("Friends\n");
        friends.display();
        print("Colleagues\n");
        colleagues.display();
        print("Neighbours\n");
        neighbours.display();
    }

    void showTree(){
        team home = create;
        home.insert(family);
        home.insert(relatives);
        home.insert(friends);
        home.insert(colleagues);
        home.insert(neighbours);
        jsonOutput(home);
    }
};



int main(){
    Home h;
    h.addPerson(create_member("A" , "B" , "C" , "D" , "E" , "F" , "G" , "H" , "I") , "family");
    h.addPerson(create_member("A" , "B" , "C" , "D" , "E" , "F" , "G" , "H" , "I") , "relatives");
    h.addPerson(create_member("A" , "B" , "C" , "D" , "E" , "F" , "G" , "H" , "I") , "friends");
    h.addPerson(create_member("A" , "B" , "C" , "D" , "E" , "F" , "G" , "H" , "I") , "colleagues");
    h.addPerson(create_member("A" , "B" , "C" , "D" , "E" , "F" , "G" , "H" , "I") , "neighbours");
    h.display();
    h.showTree();
    return 0;
}